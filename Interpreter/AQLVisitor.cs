//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/thoma/Documents/GitHub/AQL/Interpreter/AQL.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AQLParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IAQLVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] AQLParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportStatement([NotNull] AQLParser.ImportStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition([NotNull] AQLParser.DefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.constDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstDefinition([NotNull] AQLParser.ConstDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefinition([NotNull] AQLParser.FunctionDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterList([NotNull] AQLParser.FormalParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.networks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNetworks([NotNull] AQLParser.NetworksContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.queueDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueueDefinition([NotNull] AQLParser.QueueDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.networkDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNetworkDefinition([NotNull] AQLParser.NetworkDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.simulateDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimulateDefinition([NotNull] AQLParser.SimulateDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.instanceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstanceList([NotNull] AQLParser.InstanceListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.instance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstance([NotNull] AQLParser.InstanceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.routes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoutes([NotNull] AQLParser.RoutesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.metrics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMetrics([NotNull] AQLParser.MetricsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.metricList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMetricList([NotNull] AQLParser.MetricListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.metric"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMetric([NotNull] AQLParser.MetricContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssign([NotNull] AQLParser.AssignContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] AQLParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] AQLParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] AQLParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.elseIfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfStatement([NotNull] AQLParser.ElseIfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseStatement([NotNull] AQLParser.ElseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.elseIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIf([NotNull] AQLParser.ElseIfContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] AQLParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] AQLParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] AQLParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] AQLParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] AQLParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] AQLParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.arrayInitialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayInitialization([NotNull] AQLParser.ArrayInitializationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.arrayIndexing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayIndexing([NotNull] AQLParser.ArrayIndexingContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayType([NotNull] AQLParser.ArrayTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.routeType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRouteType([NotNull] AQLParser.RouteTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.qualifiedIdList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedIdList([NotNull] AQLParser.QualifiedIdListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.qualifiedId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedId([NotNull] AQLParser.QualifiedIdContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.idList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdList([NotNull] AQLParser.IdListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] AQLParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBool([NotNull] AQLParser.BoolContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInt([NotNull] AQLParser.IntContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.double"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDouble([NotNull] AQLParser.DoubleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AQLParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] AQLParser.StringContext context);
}
