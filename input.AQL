import "stdlib"

const [int] arr = {1, 2, 3};
const int x = 5 + 3;
const int pls = arr[2];

function bool someFunc (int y) {
  return x == y;
}

function double main_entrance () {
  current_time = stdlib.get_time_in_hours();

  int number_of_hours_passed = current_time / 3600;

  if number_of_hours_passed > 10 {
    return 350;
  } else {
    return 250;
  }
}

queue someQ {
  number_of_services: 5,
  service: stdlib.exponential(10),
  capacity: 95,
  metrics: [vrt, avgNum]
}

queue someOtherQ {
  number_of_services: 7,
  service: 20,
  capacity: 10,
  metrics: []
}

network someNetwork {
  inputs: firstInput, secondInput;
  outputs: output;
  instances: {
    someQ : someQ1, someQ2, someQ3;
  };
  routes: {
    firstInput -> someQ1,
    secondInput -> someQ2,
    someQ1 -> someQ3,
    someQ2 -> someQ3,
    someQ3 -> output
  }
}

network someOtherNetwork {
  inputs: firstInput, secondInput;
  outputs: output;
  routes: {
    firstInput -> [0.5 someQ, 0.5 someOtherQ],
    someOtherQ -> [0.9 someQ, 0.1 output],
    someQ -> output
  }
}

network bigNetwork {
  inputs: main_entrance;
  outputs: out;
  routes: {
    main_entrance -> [0.1 someNetwork.firstInput, 0.9 someOtherNetwork.secondInput],
    someNetwork.output -> out,
    someOtherNetwork.output -> out
  };
  metrics: [mrt, vrt, util]
}

simulate {
  run: bigNetwork,
  until: time > 10000,
  times: 500
}